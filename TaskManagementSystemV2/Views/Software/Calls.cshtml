@{
    ViewBag.Title = "Calls";
}

<head>
    @Styles.Render("~/Content/styleD.css")
    <link rel="stylesheet" href="../fonts/font-awesome-4.6.1/css/font-awesome.min.css">
</head>

@Html.Partial("NavBar")
<div class="container">
    <div class="content-wrapper">
        <!-- Content Header (Page header)-- -->
        <section class="content-header">
            <h2>
                Calls
            </h2>
            <ol class="breadcrumb">
                <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
                <li class="active">Calls</li>
            </ol>
        </section>
        <section class="content">
            <!--table container-->
            <div class="box">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#taskSummary" id="taskSummaryTabId">Task Summary</a></li>
                    <li><a data-toggle="tab" href="#taskDetail">Task Detail</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="taskSummary" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            <span class="input-group-addon">Start Date</span>
                                            <div id="cboTaskSummaryStartDate" style="width: 100%"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            <span class="input-group-addon">End Date</span>
                                            <div id="cboTaskSummaryEndDate" style="width: 100%"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4" align="right">
                                        <button class="btn btn-primary"><i class="fa fa-file-excel-o fa-fw"></i> CSV</button>
                                        <a href="/Software" class="btn btn-danger"><i class="fa fa-close fa-fw"></i> Close</a>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="taskSummaryFlexGrid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="navigationPageGridTaskSummary">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridTaskSummary">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridTaskSummary">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridTaskSummary"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridTaskSummary">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridTaskSummary">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="taskDetail" class="tab-pane fade">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            <span class="input-group-addon">Start Date</span>
                                            <div id="cboTaskDetailStartDate" style="width: 100%"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="input-group">
                                            <span class="input-group-addon">End Date</span>
                                            <div id="cboTaskDetailEndDate" style="width: 100%"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-4" align="right">
                                        <button class="btn btn-primary"><i class="fa fa-file-excel-o fa-fw"></i> CSV</button>
                                        <a href="/Software" class="btn btn-danger"><i class="fa fa-close fa-fw"></i> Close</a>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="taskDetailFlexGrid" class="grid"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body">
                <h4 style="text-align:center; color:#000000;">Loading...</h4>
            </div>
            <div class="modal-footer">
                <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/progress_bar.gif'>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")
<script type="text/javascript">
    // global variables
    var newDate = new Date();
    var defaultDate = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
    var cboTaskSummaryStartDate;
    var cboTaskSummaryEndDate;
    var cboTaskSummaryStartDateDefaultValue = defaultDate;
    var cboTaskSummaryEndDateDefaultValue = defaultDate;
    var cboTaskDetailStartDate;
    var cboTaskDetailEndDate;
    var cboTaskDetailStartDateDefaultValue = defaultDate;
    var cboTaskDetailEndDateDefaultValue = defaultDate;

    var taskSummaryCollectionView;
    var taskSummaryFlexGrid;

    var btnFirstPageGridTaskSummary;
    var btnPreviousPageGridTaskSummary;
    var btnNextPageGridTaskSummary;
    var btnLastPageGridTaskSummary;
    var btnCurrentPageGridTaskSummary;


    var taskDetailCollectionView;
    var taskDetailFlexGrid;

    // cbo start date calls per customer
    function createCboCallSummaryStartDate() {
        cboTaskSummaryStartDate.dispose();
        cboTaskSummaryStartDate = new wijmo.input.InputDate('#cboTaskSummaryStartDate', {
            format: 'MM-dd-yyyy',
            value: new Date(cboTaskSummaryStartDateDefaultValue),
            mask: '99-99-9999',
            max: new Date(cboTaskSummaryEndDateDefaultValue),
            onValueChanged: function () {
                var thisDate = new Date(this.value);
                var thisDefaultDate = [thisDate.getMonth() + 1, thisDate.getDate(), thisDate.getFullYear()].join('-');
                cboTaskSummaryStartDateDefaultValue = thisDefaultDate;
                setTimeout(function () {
                    createCboCallSummaryEndDate();
                    refreshTaskSummaryFlexGrid();
                }, 50);
            }
        });
    }

    // cbo end date calls per customer
    function createCboCallSummaryEndDate() {
        cboTaskSummaryEndDate.dispose();
        cboTaskSummaryEndDate = new wijmo.input.InputDate('#cboTaskSummaryEndDate', {
            format: 'MM-dd-yyyy',
            value: new Date(cboTaskSummaryEndDateDefaultValue),
            mask: '99-99-9999',
            min: new Date(cboTaskSummaryStartDateDefaultValue),
            onValueChanged: function () {
                var thisDate = new Date(this.value);
                var thisDefaultDate = [thisDate.getMonth() + 1, thisDate.getDate(), thisDate.getFullYear()].join('-');
                cboTaskSummaryEndDateDefaultValue = thisDefaultDate;
                setTimeout(function () {
                    createCboCallSummaryStartDate();
                    refreshTaskSummaryFlexGrid();
                }, 50);

            }
        });
    }

    // cbo start date calls per product
    function createCboCallDetailStartDate() {
        cboTaskDetailStartDate.dispose();
        cboTaskDetailStartDate = new wijmo.input.InputDate('#cboTaskDetailStartDate', {
            format: 'MM-dd-yyyy',
            value: new Date(cboTaskDetailStartDateDefaultValue),
            mask: '99-99-9999',
            max: new Date(cboTaskDetailEndDateDefaultValue),
            onValueChanged: function () {
                cboTaskDetailStartDateDefaultValue = this.value.toLocaleDateString();
                setTimeout(function () {
                    createCboCallDetailEndDate();
                }, 50);
            }
        });
    }

    // cbo end date calls per product
    function createCboCallDetailEndDate() {
        cboTaskDetailEndDate.dispose();
        cboTaskDetailEndDate = new wijmo.input.InputDate('#cboTaskDetailEndDate', {
            format: 'MM-dd-yyyy',
            value: new Date(cboTaskDetailEndDateDefaultValue),
            mask: '99-99-9999',
            min: new Date(cboTaskDetailStartDateDefaultValue),
            onValueChanged: function () {
                cboTaskDetailEndDateDefaultValue = this.value.toLocaleDateString();
                setTimeout(function () {
                    createCboCallDetailStartDate();
                }, 50);
            }
        });
    }

    // get task summary report data
    function getTaskSummaryReportData() {
        var taskArray = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/task/listByRangedDate/' + cboTaskSummaryStartDateDefaultValue + "/" + cboTaskSummaryEndDateDefaultValue,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function (taskResult) {
                if (taskResult.length > 0) {
                    for (i = 0; i < taskResult.length; i++) {
                        taskArray.push({
                            Id: taskResult[i]["Id"],
                            TaskNo: taskResult[i]["TaskNo"],
                            TaskDate: taskResult[i]["TaskDate"],
                            CompanyName: taskResult[i]["CompanyName"],
                            Status: taskResult[i]["Status"],
                            ProductId: taskResult[i]["ProductId"],
                            ProductCode: taskResult[i]["ProductCode"],
                            ProblemType: taskResult[i]["ProblemType"]
                        });
                    }
                }
            }
        });

        return taskArray;
    }

    // navigation button for procedure summary flexgrid
    function updateNavigateButtonsForTaskSummaryFlexGrid() {
        if (taskSummaryCollectionView.pageSize <= 0) {
            document.getElementById('navigationPageGridTaskSummary').style.display = 'none';
            return;
        }
        document.getElementById('navigationPageGridTaskSummary').style.display = 'block';
        if (taskSummaryCollectionView.pageIndex === 0) {
            btnFirstPageGridTaskSummary.setAttribute('disabled', 'disabled');
            btnPreviousPageGridTaskSummary.setAttribute('disabled', 'disabled');
            btnNextPageGridTaskSummary.removeAttribute('disabled');
            btnLastPageGridTaskSummary.removeAttribute('disabled');
        } else if (taskSummaryCollectionView.pageIndex === (taskSummaryCollectionView.pageCount - 1)) {
            btnFirstPageGridTaskSummary.removeAttribute('disabled');
            btnPreviousPageGridTaskSummary.removeAttribute('disabled');
            btnLastPageGridTaskSummary.setAttribute('disabled', 'disabled');
            btnNextPageGridTaskSummary.setAttribute('disabled', 'disabled');
        } else {
            btnFirstPageGridTaskSummary.removeAttribute('disabled');
            btnPreviousPageGridTaskSummary.removeAttribute('disabled');
            btnNextPageGridTaskSummary.removeAttribute('disabled');
            btnLastPageGridTaskSummary.removeAttribute('disabled');
        }
        btnCurrentPageGridTaskSummary.innerHTML = (taskSummaryCollectionView.pageIndex + 1) + ' / ' + taskSummaryCollectionView.pageCount;
    }

    // create task summary report flex grid
    function createTaskSummaryReportFlexGrid() {
        cboTaskSummaryStartDate = new wijmo.input.InputDate('#cboTaskSummaryStartDate');
        createCboCallSummaryStartDate();
        cboTaskSummaryEndDate = new wijmo.input.InputDate('#cboTaskSummaryEndDate');
        createCboCallSummaryEndDate();

        taskSummaryCollectionView = new wijmo.collections.CollectionView(getTaskSummaryReportData());
        taskSummaryCollectionView.pageSize = 15;

        taskSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });

        taskSummaryFlexGrid = new wijmo.grid.FlexGrid('#taskSummaryFlexGrid');
        taskSummaryFlexGrid.initialize({
            columns: [
                        {
                            "header": "Task No",
                            "binding": "TaskNo",
                            "width": "2*"
                        },
                        {
                            "header": "Task Date",
                            "binding": "TaskDate",
                            "width": "2*"
                        },
                        {
                            "header": "Client",
                            "binding": "CompanyName",
                            "width": "2*"
                        },
                        {
                            "header": "Problem Type",
                            "binding": "ProblemType",
                            "width": "2*"
                        },
            ],
            autoGenerateColumns: false,
            itemsSource: taskSummaryCollectionView,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        taskSummaryFlexGrid.trackChanges = true;

        //Navigation button
        btnFirstPageGridTaskSummary = document.getElementById('btnMoveToFirstPageGridTaskSummary');
        btnPreviousPageGridTaskSummary = document.getElementById('btnMoveToPreviousPageGridTaskSummary');
        btnNextPageGridTaskSummary = document.getElementById('btnMoveToNextPageGridTaskSummary');
        btnLastPageGridTaskSummary = document.getElementById('btnMoveToLastPageGridTaskSummary');
        btnCurrentPageGridTaskSummary = document.getElementById('btnCurrentPageGridTaskSummary');

        updateNavigateButtonsForTaskSummaryFlexGrid();

        btnFirstPageGridTaskSummary.addEventListener('click', function () {
            taskSummaryCollectionView.moveToFirstPage();
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });
        btnPreviousPageGridTaskSummary.addEventListener('click', function () {
            taskSummaryCollectionView.moveToPreviousPage();
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });
        btnNextPageGridTaskSummary.addEventListener('click', function () {
            taskSummaryCollectionView.moveToNextPage();
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });
        btnLastPageGridTaskSummary.addEventListener('click', function () {
            taskSummaryCollectionView.moveToLastPage();
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });
    }

    // refresh task summary flexgrid
    function refreshTaskSummaryFlexGrid() {
        taskSummaryCollectionView = new wijmo.collections.CollectionView(getTaskSummaryReportData());
        taskSummaryCollectionView.pageSize = 15;

        taskSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
            updateNavigateButtonsForTaskSummaryFlexGrid();
        });

        taskSummaryFlexGrid.itemsSource = taskSummaryCollectionView;
        taskSummaryFlexGrid.trackChanges = true;
    }

    // task summary tab
    $("#taskSummaryTabId").click(function () {
        $("#taskSummary").show();
        $("#taskDetail").hide();

        refreshTaskSummaryFlexGrid();
    });

    // get task summary report data
    function getTaskDetailReportData() {

    }

    // create task summary report flex grid
    function createTaskDetailReportFlexGrid() {

    }

    // on load page
    window.onload = function () {
        cboTaskDetailStartDate = new wijmo.input.InputDate('#cboTaskDetailStartDate');
        createCboCallDetailStartDate();
        cboTaskDetailEndDate = new wijmo.input.InputDate('#cboTaskDetailEndDate');
        createCboCallDetailEndDate();

        createTaskSummaryReportFlexGrid();
    }
</script>

@Html.Partial("Footer")
