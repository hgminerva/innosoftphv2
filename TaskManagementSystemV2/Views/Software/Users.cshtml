
@{
    ViewBag.Title = "User";
}

<head>
    @Styles.Render("~/Content/styleD.css")
</head>
@Html.Partial("NavBar")

<div class="container">
    <div class="content-wrapper">
        <!-- Content Header (Page header)-- -->
        <section class="content-header">
            <h2>
                User List
            </h2>
            <ol class="breadcrumb">
                <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
                <li class="active">User</li>
            </ol>
        </section>
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <!--table container-->
                    <div class="box">
                        <div class="row">
                            <div class="box-header">
                                <div class="col-md-6">
                                    <!--search box-->
                                    <div class="box-tools">
                                        <div class="input-group" style="width: 150px;">
                                            <input type="text" class="form
                                               -control input-sm" id="InputFilter" placeholder="Search">
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-default"><i class="fa fa-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="btn-group-horizontal btn-sm pull-right">
                                    <button class="btn btn-info" id="" onclick="cmdShowAddModal_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    <a href="~/Software/Dashboard" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
                                </div>
                            </div>
                        </div>
                        <!--table-->
                        <table id="userCollectionGrid" class="grid border-custom"></table>
                    </div>
                </div>
            </div>
            <!--navigation buttons-->
            <div class="btn-group pull-right" id="navigationPageGrid">
                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
        </section>
    </div><!--Wrapper end-->
    <!-- Company Delete -->
    <div class="modal fade" id="deleteUserConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete User? <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteUser" onclick="cmdUserConfirmDeleteButton_OnClick()">Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Loading Modal -->
    <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-body">
                    <h4 style="text-align:center; color:#000000;">Loading...</h4>
                </div>
                <div class="modal-footer">
                    <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/progress_bar.gif'>
                </div>
            </div>
        </div>
    </div>
    <!-- Edit/Update Modal -->
    <div class="modal fade" id="addUser" role="dialog">
        <div class="modal-dialog modal-lg" style="width: 80%;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">User Detail</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" id="add-form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <!--Username-->
                                    <label for="barCode" class="col-sm-4 control-label">Username</label>
                                    <div class="col-sm-8">
                                        <input type="hidden" class="form-control requiredField" id="userId">
                                        <input type="text" class="form-control requiredField" id="userName">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <!--Password-->
                                    <label for="barCode" class="col-sm-4 control-label">Password</label>
                                    <div class="col-sm-8">
                                        <input type="password" class="form-control requiredField" id="password">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <!--Staff Name-->
                                    <label for="sel1" class="col-sm-4 control-label">Staff Name</label>
                                    <div class="col-sm-8">
                                        <div class="" id="cboStaffNameDiv"></div>
                                        <input type="hidden" class="form-control requiredField" id="staffId">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <!--Designation-->
                                    <label for="designation" class="col-sm-4 control-label">Designation</label>
                                    <div class="col-sm-8">
                                        <div class="" id="cboDesignationDiv"></div>
                                        @*<select class="form-control" id="designation">
                                                <option>Administrator</option>
                                                <option>User</option>
                                            </select>*@
                                    </div>
                                </div>
                            </div>
                        </div>


                    </form>
                        <div id="loadingif" style="margin: 0 auto;">
                            <img class="img-responsive center-block" src="/../images/loadingC.gif">
                        </div>
                    <div id="userFormsDiv"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnIdAddUser" onclick="cmdAddUser()">Add</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")
<script type="text/javascript">

        //================
        // Global variables
        // ================
        var userGrid;
        var editUser;
        var userFormGrid;

        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;
        var userList;
        var staffList;
        var designationList;

        var cboBoxStaffName;
        var cboDesignation;
        var cboStaffNameSelectedValue = "";

        var userFormList;
        var userForms;

        // =======================
        // Get UserMasterList Data
        // =======================

        function getUserMasterList() {
            var userList = new wijmo.collections.ObservableArray();
            $("#loadingModal").modal("show");
            $.ajax({
                url: '/api/user/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var lastUser = 0;
                    $("#loadingModal").modal("hide");
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            userList.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='userEditButton' onClick='cmdUserEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='userDeleteButton' onclick='cmdUserDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                Username: results[i]["Username"],
                                Password: results[i]["Password"],
                                StaffName: results[i]["StaffName"],
                                StaffId: results[i]["StaffId"],
                                Designation: results[i]["Designation"],
                                IsLocked: results[i]["IsLocked"]

                            });
                        }
                    }
                }
            });

            return userList;
        }

        // ===================
        // Get User Forms Data
        // ===================

        function getUserFormsData() {
            var data = new Array();
            setTimeout(function () {
                //$('#loadingif').show();
                //$('#userFormsDiv').hide();
                $.ajax({ 
                    url: '/api/userforms/details/' + userList.currentItem.StaffId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (results) {
                        $('#loadingif').hide();
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                data.push({
                                    StaffId: results[i]["StaffId"],
                                    Username: results[i]["Username"],
                                    FormId: results[i]["FormId"],
                                    FormDescription: results[i]["FormDescription"],
                                    CanAdd: results[i]["CanAdd"],
                                    CanSave: results[i]["CanSave"],
                                    CanEdit: results[i]["CanEdit"],
                                    CanDelete: results[i]["CanDelete"],
                                    CanView: results[i]["CanView"],
                                    CanPreview: results[i]["CanPreview"],
                                    CanPrint: results[i]["CanPrint"],
                                });
                            }

                            userFormList = new wijmo.collections.CollectionView(data);
                            userFormList.canFilter = true;

                            userFormsGrid.itemsSource = userFormList;
                            userFormsGrid.trackChanges = true;
                        }
                    }
                });
            }, 1000);
        }


        // ==================
        // Get StaffName Data
        // ==================

        function getStaffName() {
            var staffList = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/staff/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var lastUser = 0;
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            staffList.push({
                                Id: results[i]["Id"],
                                StaffName: results[i]["StaffName"]
                            });
                        }
                        cboStaffName(staffList);
                    } else {
                        cboStaffName(staffList);
                    }
                }
            });

            return staffList;
        }

        // =============================
        // Combo Box Wijmo - Staff Name
        // =============================

        function cboStaffName(staffList) {
            var staffCollection = new wijmo.collections.CollectionView(staffList);
            var staffList = new Array();
            for (var i = 0; i < staffCollection.items.length; i++) {

                staffList.push(staffCollection.items[i].StaffName);
            }

            cboBoxStaffName.dispose();
            cboBoxStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv', {
                placeholder: "Select Staff",
                itemsSource: staffList,
                isEditable: false,
                selectedValue: cboStaffNameSelectedValue.toString()
            });

            cboBoxStaffName.onSelectedIndexChanged = function () {
                document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
                //document.getElementById("staffId").value = cboStaffName.selectedValue
            }
        }

        // ==================================
        // Combo Box Wijmo - Designation Name
        // ==================================

        function cboDesignation() {
            var des = new Array();
            des.push({
                "header": "Admin",
                "value": "1"
            });

            des.push({
                "header": "User",
                "value": "2"
            });


            cboDesignation = new wijmo.input.ComboBox('#cboDesignationDiv', {
                placeholder: "Select Staff",
                displayMemberPath: "header",
                selectedValuePath: "value",
                itemsSource: des,
                isEditable: false
            });
            cboDesignation.onSelectedIndexChanged = function () {
                document.getElementById("cboDesignationDiv").value = cboDesignation.selectedValue
            }
        }

        // ===================
        // Show Add Modal Button
        // ===================
        function cmdShowAddModal_OnClick() {
            $('#addUser').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredField').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            cboStaffNameSelectedValue = "";
            getStaffName();

            document.getElementById("userId").value = 0;
            document.getElementById("userName").value = "";
            document.getElementById("password").value = "";
            document.getElementById("cboStaffNameDiv").value = "";
            document.getElementById("staffId").value = "";
            document.getElementById("btnIdAddUser").innerHTML = "Add"
        }

        // ===================
        // Edit Modal Button
        // ===================
        function cmdUserEditButton_OnClick() {
            $('#addUser').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredField').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("userId").value = 1;

            document.getElementById("userName").value = userList.currentItem.Username;
            document.getElementById("password").value = userList.currentItem.Password;
            document.getElementById("staffId").value = userList.currentItem.StaffId;
            cboStaffNameSelectedValue = userList.currentItem.StaffName;
            cboDesignation.selectedValue = userList.currentItem.Designation;

            document.getElementById("btnIdAddUser").innerHTML = "Update"
            getStaffName();

            userFormList = new wijmo.collections.CollectionView(getStaffName());
            userFormList.canFilter = true;
            userFormList.pageSize = 15;

            getUserFormsData();


        }

        // ===================
        // Refesh Grid only
        // ===================
        function refresh() {
            userList = new wijmo.collections.CollectionView(getUserMasterList());
            userList.canFilter = true;
            userList.pageSize = 15;

            userList.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();
            });

            userGrid.itemsSource = userList;
            userGrid.trackChanges = true;

        }

        // =========================
        // User Entry Validation
        // =========================
        function userEntryValidation() {
            var isValid = true;
            $('.requiredField').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // =====================
        // User Add/Update Button
        // =====================
        function cmdAddUser() {
            var userObject = new Object();
            // userObject.StaffId = cboBoxStaffName.selectedItem["Id"];

            userObject.Username = document.getElementById("userName").value;
            userObject.Password = document.getElementById("password").value;
            userObject.StaffId = document.getElementById("staffId").value;
            userObject.Designation = cboDesignation.selectedValue;//document.getElementById("designationId").value;

            var data = JSON.stringify(userObject);
            //var data = userObject;

            var userId = document.getElementById("userId").value;
            if (userEntryValidation() == false) {
                toastr.error("Fill out form");

            } else {
                if (userId > 0) { //Update
                    var itemdata = data;
                    $('.dis').prop('disabled', true);
                    $.ajax({
                        url: '/api/user/update/' + userList.currentItem.Id,
                        type: 'PUT',
                        dataType: 'json',
                        data: itemdata,
                        contentType: "application/json;charset=utf-8",
                        cache: false,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Sucess");
                                $('#addUser').modal('hide');
                                //$('#addUser').remove();
                                refresh();
                            },
                            404: function () {
                                toastr.error("Edit Failed");
                            },
                            400: function () {
                                toastr.error("Edit Failed");
                            }
                        }
                    });

                } else { //Add
                    $.ajax({
                        url: '/api/user/add/',
                        type: 'POST',
                        data: data,
                        contentType: "application/json;charset=utf-8",
                        cache: false,
                        statusCode: {
                            200: function () {
                                $('#addUser').modal('hide');
                                toastr.success("Saved");
                                refresh();

                            },
                            400: function () {
                                alert("Add Error");
                            },
                        }
                    });
                }
            }
        }

        // =====================
        // User delete Button
        // =====================
        function cmdUserDeleteButton_OnClick() {
            var id = userList.currentItem.Id;

            $('#deleteUserConfirm').modal({
                show: true,
                backdrop: 'static'
            });
            $("#cmdConfirmDeleteUser").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);

        }
        // Company Confirm Delete Button
        function cmdUserConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteUser").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            //====================
            var id = userList.currentItem.Id;

            $.ajax({
                url: '/api/user/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteUser").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        $('#deleteUserConfirm').modal('hide');
                        toastr.success("Successfully Deleted");
                        refresh();
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deleteUserConfirm').modal('hide');
                        $("#cmdConfirmDeleteUser").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $('#deleteUserConfirm').modal('hide');
                        $("#cmdConfirmDeleteUser").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }



        // ============
        // On Page Load
        // ============
        $(document).ready(function () {
            cboBoxStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv');
            cboDesignation();

            //localStorage.setUser("lastId", results[results.length - 1]["ItemCode"]);
            userList = new wijmo.collections.CollectionView(getUserMasterList());
            userList.canFilter = true;
            userList.pageSize = 15;

            //Filter
            var filterText = '';
            $('#InputFilter').keydown(function () {
                filterText = this.value.toLowerCase();
                userList.refresh();
            });
            userList.filter = function (item) {
                return !filterText
                || (item.Username.toLowerCase().indexOf(filterText) > -1)
                || (item.StaffName.toLowerCase().indexOf(filterText) > -1)
            }
            userList.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();

            });
            userList.currentChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();
            });

            userList.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();
            });

            //Users - Flex Grid
            userGrid = new wijmo.grid.FlexGrid('#userCollectionGrid');
            userGrid.initialize({
                columns: [


                {
                    "header": "Edit",
                    "binding": "EditId",
                    "width": 70,
                    "align": "center",
                    "isContentHtml": true
                },
                {
                    "header": "Delete",
                    "binding": "DeleteId",
                    "width": 90,
                    "align": "center",
                    "isContentHtml": true

                },
                {
                    "header": "Username",
                    "binding": "Username",
                    "align": "center",
                    "allowSorting": true,
                    "width": "2.5*"
                },
                {
                    "header": "Staff Name",
                    "binding": "StaffName",
                    "align": "center",
                    "allowSorting": true,
                    "width": "4*"
                },
                {
                    "header": "L",
                    "binding": "IsLocked",
                    "align": "center",
                    "allowSorting": true,
                    "width": "1.5*"
                }],
                autoGenerateColumns: false,
                itemsSource: userList,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userGrid.trackChanges = true;



            // Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsCollection();

            btnFirstPageGrid.addEventListener('click', function () {
                userList.moveToFirstPage();
                updateNavigateButtonsCollection();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                userList.moveToPreviousPage();
                updateNavigateButtonsCollection();
            });
            btnNextPageGrid.addEventListener('click', function () {
                userList.moveToNextPage();
                updateNavigateButtonsCollection();
            });
            btnLastPageGrid.addEventListener('click', function () {
                userList.moveToLastPage();
                updateNavigateButtonsCollection();
            });

            //UserForms - Flex Grid
            userFormsGrid = new wijmo.grid.FlexGrid('#userFormsDiv');
            userFormsGrid.initialize({
                columns: [


                {
                    "header": "Form",
                    "binding": "FormDescription",
                    "width": "3*",
                    "align": "center",
                    "isContentHtml": true
                },
                {
                    "header": "Add",
                    "binding": "CanAdd",
                    "width": ".5*",
                    "align": "center",
                    "isContentHtml": true

                },
                {
                    "header": "Save",
                    "binding": "CanSave",
                    "align": "center",
                    "allowSorting": true,
                    "width": ".5*"
                },
                {
                    "header": "Edit",
                    "binding": "CanEdit",
                    "align": "center",
                    "allowSorting": true,
                    "width": ".5*"
                },
                {
                    "header": "Delete",
                    "binding": "CanDelete",
                    "align": "center",
                    "allowSorting": true,
                    "width": ".5*"
                },
                {
                    "header": "View",
                    "binding": "CanView",
                    "align": "center",
                    "allowSorting": true,
                    "width": ".5*"
                },
                 {
                     "header": "Preview",
                     "binding": "CanView",
                     "align": "center",
                     "allowSorting": true,
                     "width": ".5*"
                 },
                {
                    "header": "Print",
                    "binding": "CanPrint",
                    "align": "center",
                    "allowSorting": true,
                    "width": ".5*"
                }

                ],
                autoGenerateColumns: false,
                itemsSource: userFormList,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userFormsGrid.trackChanges = true;

        });

        // ==================
        // Navigation Buttons
        // ==================
        function updateNavigateButtonsCollection() {
            if (userList.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (userList.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (userList.pageIndex === (userList.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (userList.pageIndex + 1) + ' / ' + userList.pageCount;

        }

</script>


@Html.Partial("Footer")